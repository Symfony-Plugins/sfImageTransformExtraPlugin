<?php

/**
 * This file is part of the sfImageTransformExtraPlugin package.
 * (c) 2009-2010 Christian Schaefer <schaefer.christian@guj.de>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @package    sfImageTransformExtraPlugin
 * @subpackage task
 * @author     Christian Schaefer <schaefer.christian@guj.de>
 * @version    SVN: $Id: $
 */

/**
 * With this task you can remove thumbnails generated by sfImageTransformExtraPlugin.
 *
 * @package    sfImageTransformExtraPlugin
 * @subpackage task
 */
class sfImageTransformRemovalTask extends sfBaseTask
{

  /**
   * Declares this task to the Symfony task system with all arguments and options.
   *
   * @return void
   * @see sfTask
   */
  protected function configure()
  {
    $this->addArgument('application', sfCommandArgument::REQUIRED, 'The application name');

    $this->addOption('env', null, sfCommandOption::PARAMETER_OPTIONAL, 'The environment', 'prod');
    $this->addOption('type', null, sfCommandOption::PARAMETER_OPTIONAL, 'Limits the removal to a single type. Defaults to all.', '*');
    $this->addOption('format', null, sfCommandOption::PARAMETER_OPTIONAL, 'Limits the removal to a single format. Defaults to all.', '*');
    $this->addOption('id', null, sfCommandOption::PARAMETER_OPTIONAL, 'Limits the removal to a single ID. Defaults to all.', '*');
    $this->addOption('no-confirmation', null, sfCommandOption::PARAMETER_OPTIONAL, 'No confirmation before removal.', false);

    $this->aliases          = array(
      'remove-thumbnails'
    );
    $this->namespace        = 'transforms';
    $this->name             = 'remove';
    $this->briefDescription = 'Removes thumbnails generated by sfImageTransformExtraPlugin.';

    $this->detailedDescription = <<<EOF
Removes thumbnails generated by sfImageTransformExtraPlugin.

  [./symfony transforms:remove <appname> |INFO]
  Removes all (!) generated thumbnails.

  [./symfony transforms:remove <appname> --type=Model |INFO]
  Removes all thumbnails that originate from an image that belongs to a model "Model".

  [./symfony transforms:remove <appname> --format=rounded_corners |INFO]
  Removes all thumbnails of the format 'rounded_corners'.

  [./symfony transforms:remove <appname> --id=123 |INFO]
  Removes all thumbnails that originate from an image with the ID '123'.

All above filter options default to '*' (all). They can be combined in every combination.

  [./symfony transforms:remove <appname> --format=rounded_corners --id=123 |INFO]
  Removes the 'rounded_corners' thumbnail for image ID '123'.

EOF;

  }

  /**
   * Executes this task with all arguments and options from commandline
   *
   * @param array $arguments Arguments as read from commandline
   * @param array $options   Options as read from commandline
   *
   * @return void
   * @see sfTask
   */
  protected function execute($arguments = array() , $options = array())
  {
    if ('*' == $options['format'])
    {
      if ('*' == $options['id'])
      {
        $question = 'Are you sure you want to remove all thumbnails?';
      }
      else
      {
        $question = 'Are you sure you want to remove thumbnails for image #' . $options['id'] . '?';
      }
    }
    else
    {
      if ('*' == $options['id'])
      {
        $question = 'Are you sure you want to remove "' . $options['format'] . '" thumbnails?';
      }
      else
      {
        $question = 'Are you sure you want to remove "' . $options['format'] . '" thumbnails for image #' . $options['id'] . '?';
      }
    }

    $pattern = sprintf('*:%s:%s:**:*-%s.*',
      $options['type'],
      $options['format'],
      $options['id']
    );

    sfImageTransformExtraPluginConfiguration::getCache()->removePattern($pattern);
  }
}
